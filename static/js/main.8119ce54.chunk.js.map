{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.component.jsx","api/index.js","components/Chart/Chart.component.jsx","components/CountryPicker/CountryPicker.component.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","style","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","content","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeUrl","axios","get","console","log","fetchDaily","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","alt","src","coronaImg","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8119ce54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1hzwd\",\"card\":\"Cards_card__3K3wm\",\"content\":\"Cards_content__1yne2\",\"infected\":\"Cards_infected__1mifW\",\"recovered\":\"Cards_recovered__38YeJ\",\"deaths\":\"Cards_deaths__2v5fS\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport style from './Cards.module.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n\tif (!confirmed) {\r\n\t\treturn 'Loading...';\r\n\t}\r\n\treturn (\r\n\t\t<div className={style.container}>\r\n\t\t\t<Grid container spacing={3} justify=\"center\">\r\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(style.card, style.infected)}>\r\n\t\t\t\t\t<CardContent className={style.content}>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\tInfectati\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\" component=\"h2\">\r\n\t\t\t\t\t\t\t<CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\t\tPersoane infectate\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(style.card, style.recovered)}>\r\n\t\t\t\t\t<CardContent className={style.content}>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\tRecuperati\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\" component=\"h2\">\r\n\t\t\t\t\t\t\t<CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\t\tPersoane recuperate\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(style.card, style.deaths)}>\r\n\t\t\t\t\t<CardContent className={style.content}>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\tDeceda»õi\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\" component=\"h2\">\r\n\t\t\t\t\t\t\t<CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\t\tPersoane decedate\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n\tlet changeUrl = url;\r\n\r\n\tif (country) {\r\n\t\tchangeUrl = `${url}/countries/${country}`;\r\n\t}\r\n\r\n\ttry {\r\n\t\tconst { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeUrl);\r\n\r\n\t\treturn { confirmed, recovered, deaths, lastUpdate };\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nexport const fetchDaily = async () => {\r\n\ttry {\r\n\t\tconst { data } = await axios.get(`${url}/daily`);\r\n\r\n\t\tconst modifiedData = data.map((dailyData) => ({\r\n\t\t\tconfirmed: dailyData.confirmed.total,\r\n\t\t\tdeaths: dailyData.deaths.total,\r\n\t\t\tdate: dailyData.reportDate\r\n\t\t}));\r\n\r\n\t\treturn modifiedData;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n\ttry {\r\n\t\tconst { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n\t\treturn countries.map((country) => country.name);\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDaily } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport style from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n\tconst [ dailyData, setDailyData ] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetDailyData(await fetchDaily());\r\n\t\t};\r\n\r\n\t\tfetchAPI();\r\n\t}, []);\r\n\r\n\tconst lineChart = dailyData.length ? (\r\n\t\t<Line\r\n\t\t\tdata={{\r\n\t\t\t\tlabels: dailyData.map(({ date }) => date),\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: dailyData.map(({ confirmed }) => confirmed),\r\n\t\t\t\t\t\tlabel: 'Infectati',\r\n\t\t\t\t\t\tborderColor: '#3333ff',\r\n\t\t\t\t\t\tfill: true\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: dailyData.map(({ deaths }) => deaths),\r\n\t\t\t\t\t\tlabel: 'Morti',\r\n\t\t\t\t\t\tborderColor: 'red',\r\n\t\t\t\t\t\tbackgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n\t\t\t\t\t\tfill: true\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}}\r\n\t\t/>\r\n\t) : null;\r\n\r\n\tconsole.log(confirmed, recovered, deaths);\r\n\tconst barChart = confirmed ? (\r\n\t\t<Bar\r\n\t\t\tdata={{\r\n\t\t\t\tlabels: [ 'Infectati', 'Recuperati', 'Morti' ],\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Persoane',\r\n\t\t\t\t\t\tbackgroundColor: [ 'rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)' ],\r\n\t\t\t\t\t\tdata: [ confirmed.value, recovered.value, deaths.value ]\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}}\r\n\t\t\toptions={{\r\n\t\t\t\tlegend: { display: false },\r\n\t\t\t\ttitle: { display: true, text: `Cifrele actuale in ${country}` }\r\n\t\t\t}}\r\n\t\t/>\r\n\t) : null;\r\n\r\n\treturn <div className={style.container}>{country ? barChart : lineChart}</div>;\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport style from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\tconst [ fetchedCountries, setFetchedCountries ] = useState([]);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst fetchAPI = async () => {\r\n\t\t\t\tsetFetchedCountries(await fetchCountries());\r\n\t\t\t};\r\n\r\n\t\t\tfetchAPI();\r\n\t\t},\r\n\t\t[ setFetchedCountries ]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<FormControl className={style.formControl}>\r\n\t\t\t<NativeSelect\r\n\t\t\t\tdefaultValue=\"\"\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\thandleCountryChange(e.target.value);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<option value=\"\">Global</option>\r\n\t\t\t\t{fetchedCountries.map((country, i) => (\r\n\t\t\t\t\t<option key={i} value={country}>\r\n\t\t\t\t\t\t{country}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t))}\r\n\t\t\t</NativeSelect>\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport style from './App.module.css';\r\n\r\nimport { fetchData } from './api';\r\n\r\nimport coronaImg from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n\tstate = {\r\n\t\tdata: {},\r\n\t\tcountry: ''\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst fetchedData = await fetchData();\r\n\r\n\t\tthis.setState({ data: fetchedData });\r\n\t}\r\n\r\n\thandleCountryChange = async (country) => {\r\n\t\tconst fetchedData = await fetchData(country);\r\n\r\n\t\tthis.setState({ data: fetchedData, country: country });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { data, country } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={style.container}>\r\n\t\t\t\t<img className={style.image} alt=\"COVID-19\" src={coronaImg} />\r\n\t\t\t\t<Cards data={data} />\r\n\t\t\t\t<CountryPicker handleCountryChange={this.handleCountryChange} />\r\n\t\t\t\t<Chart data={data} country={country} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3hgql\",\"image\":\"App_image__1Ef5N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2Ybot\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__T8ZHa\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}